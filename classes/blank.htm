<!DOCTYPE html>
<html lang="en">
<head>

  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="../CSS/pagestyle.css">

  <title>Yehwa Song</title>

</head>

<body>

    <a href="../main.html">
        <img src="../assets/logo.png" alt="logo" class="logo-top-left" />
    </a>

    <nav class="navbar">
        <a href="../photography/photography.html">Photography</a>
        <a href="../videos/videos.html">Videos</a>
        <a href="../coding/coding.html">Coding</a>
        <a href="../classes/classes.html">Classes</a>
        <a href="../extracurriculars/extracurriculars.html">Extracurriculars</a>
    </nav>

    <h1 class="title">Yewha Song</h1>

    <div class="blog-text">

        <p>
            Through the evolution of technology, art has naturally merged with the internet, emerging Net Art. 
            The main difference I perceive between Net Art and Physical Art is the way each form of art is contained. 
            On one hand, Physical Art is something you can touch, often involving many tools to keep the paper or canvas from aging or during transportation. 
            However, on the other hand, Net Art is easily transferrable through code, something that doesn't need to be physical. 
            It can be easily transported through copy-paste in an email, and the only way to update it (to prevent “aging”) is by updating the code. 
            In this aspect, I think Net Art provides more convenience and is an inevitable piece in the art world for the future. 
            I think this medium is the only difference between Physical and Net Art as in both forms, the artist still has unlimited freedom of creativity and imagination.  
        </p>
        <p>
            I first started by manipulating the oscillation utilizing frameCount and Sin, which I manipulated by changing the variable that was being multiplied with the Sin to make each circle move slower/faster. 
            At first, I created vertical circle movement, but then I wanted to add horizontal movement which I did by utilizing Cos. 
            By manipulating the frameCount, I managed to manipulate all of the circle's speeds while maintaining each of their own speed.
        </p>
        <a href="https://drive.google.com/file/d/1H6RXme3przAthckyxjJwI3PBYv56V2Ha/view" target="_blank" class="blog-link">
            Changing Framecount Demo Video →
        </a>
        <p>
            In the project, I also explored circle position while incorporating oscillation and color motion which I did by utilizing the map tool, to define my RGB colors, and to take away the background. 
            Originally, I utilized the map function for the background, however, in order to create a circle that leaves a trail, I decided to change my code to take away the background. 
            You can see the difference in these two videos.
        </p>
        <p>
            An issue I had at the start of the project was adjusting the color motion as I wanted specific shades of pink, but I realized you can't put in the typical three-variable RGB for a specific color. 
            Another issue was allowing the Sin Oscillations to be shown with the color motion. 
            This was solved by putting the code in different placements and changing the fill, as in order for the circle color motion to appear, I took away the background.  
        </p>
        <img src="../assets/gm3.png" alt="Generative Motion thumbnail" class="blog-image" />

    </div>

    <div class="bottom-space"></div>

</body>
</html>